#!/usr/bin/bash
set -ex


cd "$(dirname $0)/.."

downloadSbomSpdxForModules(){
    SBOM_URL="https://github.com/spdx/spdx-sbom-generator/releases/download/v0.0.10/spdx-sbom-generator-v0.0.10-linux-amd64.tar.gz"
    wget -c "${SBOM_URL}" -O - | tar -xz  -C "bin/"
    # downloaded file: bin/spdx-sbom-generator
}

getFilesToSetHeaderOnly(){
    find . -type f \( \
    -name 'Makefile'  \
    -o -name '*.yaml' \
    -o -name '*.yml' \
    -o -name '*.py' \
    -o -name '*.go' \
    -o -name '*.rb' \
    -o -name '*.md' \
    -o -name '*.json' \
    -o -name '.drone.json' \
    -o -name 'Dockerfile' \) >> files_to_header

    # Done this was as find command does not include hidden directories
    find .github -type f \( -name '*.yml' -o -name '*.yaml' -o -name '*.md' \) >> files_to_header

    tr '\n' ' '< files_to_header >> files_to_header_tmp 
    mv files_to_header_tmp files_to_header
}

getFilesForExplicitLicense(){
    # files with explicit license
    find . -type f \( \
    -name '*.txt'  \
    -o -name '*.tmpl' \
    -o -name '*.ps*' \
    -o -name '*.exe' \
    -o -name '*.tar*' \
    -o -name '*.gz' \
    -o -name '*.env' \
    -o -name '*.sh' \
    -o -name '*.conf*' \
    -o -name '*.service' \
    -o -name '*.png' \
    -o -name '*.pdf' \
    -o -name '*.svg' \
    -o -name '*binary*' \
    -o -name '*bundle*' \
    -o -name '*manifest*' \
    -o -name '*-image*' \
    -o -name '*test-*' \
    -o -name '*Vagrantfile' \
    -o -name '*dev-*' \
    -o -name '*.flake8' \
    -o -name 'rke2' \
    -o -name 'CNAME' \
    -o -name '.codespellignore' \
    -o -name '.dapper' \
    -o -name '.dockerignore' \
    -o -name '.gitignore' \
    -o -name 'LICENSE' \
    -o -name 'CODEOWNERS' \
    -o -name 'MAINTAINERS' \
    -o -name 'Dockerfile.*' \
    -o -name 'go.*' \) >> files_explicit_license

    {
        find .vagrant -name '*.*'
        find scripts -not -name 'airgap'
        find bin -name '*.*'
        find tests/vagrant/install/ubuntu-focal/.vagrant -name '*.*'
    } >> files_explicit_license


    tr '\n' ' ' < files_explicit_license >> files_explicit_license_tmp
    mv files_explicit_license_tmp files_explicit_license

    FILES_TO_ADD_HEADER="$(cat files_to_header)"
    FILES_EXPLICIT_LICENSE="$(cat files_explicit_license)"

    rm files_explicit_license files_to_header
}

downloadSbomSpdxForModules

# generate go.mod spdx from current project
 ./bin/spdx-sbom-generator --include-license-text  2> err-spdx-gomod.txt

HAS_ERR=$(grep "Command has completed with errors" "err-spdx-gomod.txt")
if [ "${HAS_ERR}" -eq "" ]
then
    mv bom-go-mod.spdx "dist/artifacts/SBOM_SPDX_${PROJECT_NAME}_GOMOD_$(date '+%Y%m%d').spdx" 
else
    echo "ERROR: SBOM-SPDX-TOOL error while generating SPDX for go.mod" 
    exit 1
fi

PROJECT_SPDX_LICENSE_ID="Apache-2.0"
PROJECT_COPYRIGHT="SUSE <suse-team@suse.com>"
PROJECT_NAME="rke2"

rm files_to_header files_explicit_license err-spdx-gomod.txt && touch files_to_header files_explicit_license

getFilesToSetHeaderOnly

getFilesForExplicitLicense

# starts the SPDX tool for the current project
docker pull fsfe/reuse

docker run --rm --volume "$(pwd)":/data fsfe/reuse addheader \
--copyright="${PROJECT_COPYRIGHT}" --license="${PROJECT_SPDX_LICENSE_ID}" \
${FILES_TO_ADD_HEADER}

docker run --rm --volume "$(pwd)":/data fsfe/reuse addheader \
--copyright="${PROJECT_COPYRIGHT}" --license="${PROJECT_SPDX_LICENSE_ID}" --explicit-license \
${FILES_EXPLICIT_LICENSE}

echo "${PROJECT_SPDX_LICENSE_ID} successfully added to the project"

if docker run --rm --volume "$(pwd)":/data fsfe/reuse lint | grep -q 'Congratulations! Your project is compliant'; then
    
    echo "Downloading licences"
    docker run --rm --volume "$(pwd)":/data fsfe/reuse download --all
    if [ "$(ls LICENSES | wc -l)" -gt "0" ];then
        docker run --rm --volume "$(pwd)":/data fsfe/reuse --include-submodules spdx -o "dist/artifacts/SBOM_SPDX_${PROJECT_NAME}_$(date '+%Y%m%d').spdx"
        exit 0
    fi
fi 

exit 1
